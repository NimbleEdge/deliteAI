# SPDX-FileCopyrightText: (C) 2025 DeliteAI Authors
#
# SPDX-License-Identifier: Apache-2.0

import glob
import os
import shutil

from setuptools import find_packages, setup
from setuptools.dist import Distribution


class DistributionClass(Distribution):
    """Distribution which always forces a binary package with platform name, this is needed by CIBUILDWHEEL to generate platform and python version specific whl file"""

    def has_ext_modules(package):
        return True


# Get the list of .so or .dylib files generated by pybind11
source_files = [file for file in glob.glob("build/bin/*") if os.path.isfile(file)]

# package name
destination_dir = "deliteai"

# If deliteai directory not present, create a new one. This is required for installing the simulator locally.
if not os.path.isdir(destination_dir):
    os.makedirs(destination_dir)
with open(f"{destination_dir}/__init__.py", "w") as f:
    pass

# Copy each file to the destination directory
for source_file in source_files:
    shutil.copy(source_file, destination_dir)


# Helper function to fetch the version
# It strips the "-dev" from the version if present as the Python package is not
# able to handle versions in formats beyond semantic versioning.
def get_version():
    # Tried reading config.yml with pyyaml package, but it is not able to install as a build requirement in manylinux machine before building.
    # Adding CIBW_BEFORE_BUILD flag also does not work.

    # For linux builds the whl file is built inside a docker image, which takes the directory from setup.py as the root project. so unable to read config.ymml.
    # To overcome this issue, in CI config.yml is copied to coreruntime and then read.
    if os.path.exists("config.yml"):
        config_path = "config.yml"
    elif os.path.exists("../config.yml"):
        config_path = "../config.yml"
    else:
        raise FileNotFoundError("Could not find config.yml")

    with open(config_path, "r") as config_file:
        for line in config_file:
            if "sdk_version" in line:
                # Extract the version value
                return line.split(":")[1].strip().strip('"').strip("'").strip("-dev")
    raise ValueError("sdk_version not found in config.yml")


setup(
    name='deliteai',
    version=get_version(),
    author="DeliteAI Authors",
    author_email="team-opensource@nimbleedgehq.ai",
    description='Python package to simulate the functionailties of NimbleSDK',
    long_description="Python package to simulate the functionailties of NimbleSDK.",
    packages=find_packages(),
    package_data={'deliteai': ['*']},
    include_package_data=True,
    python_requires=">=3.9",
    install_requires=["ast2json==0.3", "numpy>=1.26.0"],
    distclass=DistributionClass,
)
